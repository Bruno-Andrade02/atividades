{"cells":[{"cell_type":"markdown","metadata":{"id":"ex2iP9BO0JCP"},"source":["\n","Jogo da Velha, Bruno Oliveira Andrade"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"YvAFzHsUwFns"},"outputs":[{"name":"stdout","output_type":"stream","text":["Vamos iniciar o jogo da velha!\n","Você escolhe ser X ou O?\n"]}],"source":["import random\n","\n","def CopiaTabuleiro(board):\n","    #Faz uma copia do quadro e retorna esta copia\n","    dupeBoard = []\n","    for i in board:\n","        dupeBoard.append(i)\n","    return dupeBoard\n","\n","def desenhaTabuleiro(board):\n","    #Imprime o quadro do jogo\n","    #O quadro eh uma lista de 9 representando o tabuleiro\n","    copyBoard = CopiaTabuleiro(board)\n","\n","    for i in range(1,10):\n","        if(board[i] == ''):\n","            copyBoard[i] = str(i)\n","        else:\n","            copyBoard[i] = board[i]\n","    \n","    print(' ' + copyBoard[7] + '|' + copyBoard[8] + '|' + copyBoard[9])\n","    #print(' | |')\n","    print('-------')\n","    #print(' | |')\n","    print(' '+ copyBoard[4] + '|' + copyBoard[5] + '|' + copyBoard[6])\n","    #print(' | |')\n","    print('-------')\n","    #print(' | |')\n","    print(' '+ copyBoard[1] + '|' + copyBoard[2] + '|' + copyBoard[3])\n","    #print(' | |')\n","    print('-------')\n","    #print(' | |')\n","\n","def escolheLetra():\n","    #O jogador escolhe com qual letra ele quer jogar \"X\" ou \"O\"\n","    #Retorna uma lista com a letra do jogador e a letra do computador\n","    letter = ''\n","    while not(letter == 'X' or letter == 'O'):\n","        print('Você escolhe ser X ou O?')\n","        letter = input().upper()\n","        if(letter != 'X' and letter != 'O'):\n","            print(\"Entre apenas com a letra X(xis) se você quer ser X ou com a letra O(oh) se você quer ser O!\")\n","\n","    #O primeiro elemento na lista será o do jogador e o segundo do computador\n","    if letter == 'X':\n","        return ['X','O']\n","    else:\n","        return ['O','X']\n","\n","def quemPrimeiro():\n","    #Escolhe aleatoriamente quem jogara primeiro\n","    if random.randint(0, 1) == 0:\n","        return 'computador'\n","    else:\n","        return 'jogador'\n","\n","def makeMove(board, letter, move):\n","    #Faz o movimento do computador ou do jogador a depender do letter no quadro\n","    board[move] = letter\n","\n","def isWinner(brd, let):\n","    #Esta funcao retorna True se a letra passada vence o jogo\n","    return((brd[7] == let and brd[8] == let and brd[9] == let) or #linha de cima\n","        (brd[4] == let and brd[5] == let and brd[6] == let) or #linha do meio\n","        (brd[1] == let and brd[2] == let and brd[3] == let) or #linha de baixo\n","        (brd[7] == let and brd[4] == let and brd[1] == let) or #coluna da esquerda\n","        (brd[8] == let and brd[5] == let and brd[2] == let) or #coluna do meio\n","        (brd[9] == let and brd[6] == let and brd[3] == let) or #coluna da direito\n","        (brd[7] == let and brd[5] == let and brd[3] == let) or #diagonal principal\n","        (brd[9] == let and brd[5] == let and brd[1] == let)) #diagonal secundaria\n","\n","def isSpaceFree(board, move):\n","    #Retorna true se o espaco solicitado esta livre no quadro\n","    if(board[move] == ''):\n","        return True\n","    else:\n","        return False\n","\n","def getPlayerMove(board):\n","    #Recebe o movimento do jogador\n","    move = ''\n","    while move not in '1 2 3 4 5 6 7 8 9'.split() or not isSpaceFree(board, int(move)):\n","        print('Qual é o seu proximo movimento? (1-9)')\n","        move = input();\n","        if(move not in '1 2 3 4 5 6 7 8 9'):\n","            print (\"MOVIMENTO INVALIDO! INSIRA UM NUMERO ENTRE 1 E 9!\")\n","        \n","        if(move in '1 2 3 4 5 6 7 8 9'):\n","            if(not isSpaceFree(board, int(move))):\n","                print (\"ESPACO INSDISPONIVEL! ESCOLHA OUTRO ESPAÇO ENTRE 1 E 9 O QUAL O NUMERO ESTA DISPONIVEL NO QUADRO!\")\n","\n","    return int(move)\n","\n","def chooseRandomMoveFromList(board, movesList):\n","    #Retorna um movimento valido aleatorio\n","    #Retorna None se não possui movimentos válidos \n","\n","    possiveisMovimentos = []\n","    for i in movesList:\n","        if isSpaceFree(board, i):\n","            possiveisMovimentos.append(i)\n","\n","    if len(possiveisMovimentos) != 0:\n","        return random.choice(possiveisMovimentos)\n","    else:\n","        return None\n","\n","def isBoardFull(board):\n","    #Retorna True se todos os espacos do quadro estao indisponiveis\n","    for i in range(1, 10):\n","        if isSpaceFree(board, i):\n","            return False\n","    return True\n","\n","def possiveisOpcoes(board):\n","\n","    opcoes = []\n","\n","    for i in range(1, 10):\n","        if isSpaceFree(board, i):\n","            opcoes.append(i)\n","\n","    return opcoes\n","\n","def finishGame(board, computerLetter):\n","    #Verifica se o jogo chegou ao final\n","    #Retorna -1 se o jogador ganha\n","    #Retorna 1 se o computador ganha\n","    #Retorna 0 se o jogo termina empatado\n","    #Retorna None se o jogo nao terminou\n","\n","    if computerLetter == 'X':\n","        playerLetter = 'O'\n","    else:\n","        playerLetter = 'X'\n","\n","    if(isWinner(board, computerLetter)):\n","        return 1\n","\n","    elif(isWinner(board, playerLetter)):\n","        return -1\n","\n","    elif(isBoardFull(board)):\n","        return 0\n","\n","    else:\n","        return None\n","\n","\n","def alphabeta(board, computerLetter, turn, alpha, beta):\n","    #Poda alphabeta da questão\n","\n","    if computerLetter == 'X':\n","        playerLetter = 'O'\n","    else:\n","        playerLetter = 'X'\n","\n","    if turn == computerLetter:\n","        nextTurn = playerLetter\n","    else:\n","        nextTurn = computerLetter\n","\n","    finish = finishGame(board, computerLetter)\n","\n","    if (finish != None):\n","        return finish\n","\n","    possiveis = possiveisOpcoes(board)\n","\n","    if turn == computerLetter:\n","        for move in possiveis:\n","            makeMove(board, turn, move)\n","            val = alphabeta(board, computerLetter, nextTurn, alpha, beta)\n","            makeMove(board, '', move)\n","            if val \u003e alpha:\n","                alpha = val\n","\n","            if alpha \u003e= beta:\n","                return alpha\n","        return alpha\n","\n","    else:\n","        for move in possiveis:\n","            makeMove(board, turn, move)\n","            val = alphabeta(board, computerLetter, nextTurn, alpha, beta)\n","            makeMove(board, '', move)\n","            if val \u003c beta:\n","                beta = val\n","\n","            if alpha \u003e= beta:\n","                return beta\n","        return beta\n","\n","\n","\n","def getComputerMove(board, turn, computerLetter):\n","    #Definimos aqui qual sera o movimento do computador\n","\n","    a = -2\n","    opcoes = []\n","\n","    if computerLetter == 'X':\n","        playerLetter = 'O'\n","    else:\n","        playerLetter = 'X'\n","\n","\n","    #MiniMax\n","    #Primeiro chechamos se podemos ganhar no proximo movimento\n","    for i in range(1, 10):\n","        copy = CopiaTabuleiro(board)\n","        if isSpaceFree(copy, i):\n","            makeMove(copy, computerLetter, i)\n","            if isWinner(copy, computerLetter):\n","                return i\n","\n","    #Checa se o jogador pode vencer no proximo movimento e bloqueia\n","    for i in range(1, 10):\n","        copy = CopiaTabuleiro(board)\n","        if isSpaceFree(copy, i):\n","            makeMove(copy, playerLetter, i)\n","            if isWinner(copy, playerLetter):\n","                return i\n","\n","    possiveisOpcoesOn = possiveisOpcoes(board)\n","\n","    for move in possiveisOpcoesOn:\n","\n","        makeMove(board, computerLetter, move)\n","        val = alphabeta(board, computerLetter, playerLetter, -2, 2)     \n","        makeMove(board, '', move)\n","\n","        if val \u003e a:\n","            a = val\n","            opcoes = [move]\n","\n","        elif val == a:\n","            opcoes.append(move)\n","\n","    return random.choice(opcoes)\n","\n","print('Vamos iniciar o jogo da velha!')\n","\n","jogar = True\n","\n","while jogar:\n","    #Reseta o jogo\n","    theBoard = [''] * 10\n","    playerLetter, computerLetter = escolheLetra()\n","    turn = quemPrimeiro()\n","    print('O ' + turn +' joga primeiro,')\n","    gameisPlaying = True\n","\n","    while gameisPlaying:\n","        if turn == 'jogador':\n","            #Vez do Jogador\n","            desenhaTabuleiro(theBoard)\n","            move = getPlayerMove(theBoard)\n","            makeMove(theBoard, playerLetter, move)\n","\n","            if isWinner(theBoard, playerLetter):\n","                desenhaTabuleiro(theBoard)\n","                print('Wooow! Você venceu o jogo!')\n","                gameisPlaying = False\n","            \n","            else:\n","                if isBoardFull(theBoard):\n","                    desenhaTabuleiro(theBoard)\n","                    print('O jogo terminou empatado')\n","                    break\n","                else:\n","                    turn = 'computador'\n","\n","        else:\n","            #Vez do computador\n","            move = getComputerMove(theBoard, playerLetter, computerLetter)\n","            makeMove(theBoard, computerLetter, move)\n","\n","            if isWinner(theBoard, computerLetter):\n","                desenhaTabuleiro(theBoard)\n","                print(\"O computador venceu :(\")\n","                gameisPlaying = False\n","\n","            else:\n","                if isBoardFull(theBoard):\n","                    desenhaTabuleiro(theBoard)\n","                    print('O jogo terminou EMPATADO')\n","                    break\n","                else:\n","                    turn = 'jogador'\n","\n","    letterNew = ''\n","    while not(letterNew == 'S' or letterNew == 'N'):\n","        print(\"Você quer jogar novamente? Digite S(para sim) ou N(para nao)\")\n","        letterNew = input().upper()\n","        if (letterNew != 'S' and letterNew != 'N'):\n","            print(\"Entrada invalida! Digite S(para sim) ou N(para nao)!\")\n","        if(letterNew == 'N'):\n","            print(\"Foi bom jogar com você, Até a próxima!\")\n","            jogar = False"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyOxUzL4jEJYZ/5BLPS8mhow","collapsed_sections":[],"name":"","provenance":[{"file_id":"1UcOvyZjiVScpdcY8BTPwqyK_gvBGNQgU","timestamp":1664329529007}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}