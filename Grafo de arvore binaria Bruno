{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1BSbxwho72StDbx7VnbpanzsXLqUwNfTv","timestamp":1666533368969}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Grafo de arvore binaria, Bruno Oliveira Andrade"],"metadata":{"id":"dbkHHFnJ2HoJ"}},{"cell_type":"code","source":["from graphviz import Graph"],"metadata":{"id":"P4Ws9jah1aHN","executionInfo":{"status":"ok","timestamp":1666533445787,"user_tz":180,"elapsed":8,"user":{"displayName":"Bruno Oliveira Andrade","userId":"04466641321743572860"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["class Vertice:\n","  def __init__(self, conteudo): #Construtor do vertice\n","    self.conteudo = conteudo\n","  def __eq__(self, outro): #Comparar vertices\n","    return outro.conteudo == self.conteudo\n","  def __repr__(self): #representação visual do vertice\n","    return self.conteudo\n","  def __hash__(self): #Necessário para graphviz\n","    return hash(self.conteudo)\n"],"metadata":{"id":"4d-CANRi1mfJ","executionInfo":{"status":"ok","timestamp":1666533445788,"user_tz":180,"elapsed":8,"user":{"displayName":"Bruno Oliveira Andrade","userId":"04466641321743572860"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["class Grafo:\n","  def __init__(self):\n","    self.listaAdjacentes = dict()\n","    self.listaVertices = set() #evitar repetições\n","\n","  def adicionaVertice(self,conteudo):\n","    self.listaVertices.add(Vertice(conteudo))\n","\n","  def localizaConteudo(self,conteudo):\n","    for i in self.listaVertices:\n","      if i.conteudo == conteudo:\n","        return i\n","      return -1\n","  \n","  def addConexao(self,v1,v2):  #conecta 2 vertices, (v1 a v2, v2 a v1)\n","    if not self.listaAdjacentes.get(v1):\n","      self.listaAdjacentes[v1] = [v2]\n","    else:\n","      self.listaAdjacentes[v1].append(v2)\n","\n","    if not self.listaAdjacentes.get(v2):\n","      self.listaAdjacentes[v2] = [v1]\n","    else:\n","      self.listaAdjacentes[v2].append(v1) \n","\n","  def _repr_(self): #transforma em string\n","    return str(self.listaAdjacentes)\n","\n","  def desenhoGrafo(self):\n","    g = Graph(comment=\"Arvore\",strict=True)\n","    for i in self.listaVertices:\n","      g.node(i.conteudo,i.conteudo,fontsize=\"10\")\n","    for k,v in self.listaAdjacentes.items():\n","      for j in v:\n","        g.edge(k,j,dir=\"none\")\n","    return g"],"metadata":{"id":"09T4zPbu3-Pv","executionInfo":{"status":"ok","timestamp":1666533445789,"user_tz":180,"elapsed":8,"user":{"displayName":"Bruno Oliveira Andrade","userId":"04466641321743572860"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["gr = Grafo()\n","\n","gr.adicionaVertice('A')\n","gr.adicionaVertice('B')\n","gr.adicionaVertice('C')\n","gr.adicionaVertice('D')\n","gr.adicionaVertice('E')\n","gr.adicionaVertice('F')\n","gr.adicionaVertice('G')\n","\n","\n","gr.addConexao('A','B')\n","gr.addConexao('A','C')\n","gr.addConexao('B','D')\n","gr.addConexao('B','E')\n","gr.addConexao('C','F')\n","gr.addConexao('C','G')\n","\n","\n"],"metadata":{"id":"P4TYIklZ8Dq0","executionInfo":{"status":"ok","timestamp":1666533445790,"user_tz":180,"elapsed":9,"user":{"displayName":"Bruno Oliveira Andrade","userId":"04466641321743572860"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["gr.desenhoGrafo()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"DcGCu4qq9c6W","executionInfo":{"status":"ok","timestamp":1666533445790,"user_tz":180,"elapsed":9,"user":{"displayName":"Bruno Oliveira Andrade","userId":"04466641321743572860"}},"outputId":"d99b3963-fa12-4a44-96e9-80fcdc501dff"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<graphviz.dot.Graph at 0x7f7f98f9c350>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: %3 Pages: 1 -->\n<svg width=\"278pt\" height=\"188pt\"\n viewBox=\"0.00 0.00 278.00 188.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 184)\">\n<title>%3</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-184 274,-184 274,4 -4,4\"/>\n<!-- E -->\n<g id=\"node1\" class=\"node\">\n<title>E</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"27\" cy=\"-18\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"27\" y=\"-15.5\" font-family=\"Times,serif\" font-size=\"10.00\" fill=\"#000000\">E</text>\n</g>\n<!-- B -->\n<g id=\"node2\" class=\"node\">\n<title>B</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"99\" cy=\"-90\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"99\" y=\"-87.5\" font-family=\"Times,serif\" font-size=\"10.00\" fill=\"#000000\">B</text>\n</g>\n<!-- B&#45;&#45;E -->\n<g id=\"edge4\" class=\"edge\">\n<title>B&#45;&#45;E</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M83.7307,-74.7307C71.512,-62.512 54.4602,-45.4602 42.2473,-33.2473\"/>\n</g>\n<!-- D -->\n<g id=\"node4\" class=\"node\">\n<title>D</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"99\" cy=\"-18\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"99\" y=\"-15.5\" font-family=\"Times,serif\" font-size=\"10.00\" fill=\"#000000\">D</text>\n</g>\n<!-- B&#45;&#45;D -->\n<g id=\"edge3\" class=\"edge\">\n<title>B&#45;&#45;D</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M99,-71.8314C99,-61 99,-47.2876 99,-36.4133\"/>\n</g>\n<!-- A -->\n<g id=\"node3\" class=\"node\">\n<title>A</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"135\" cy=\"-162\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"135\" y=\"-159.5\" font-family=\"Times,serif\" font-size=\"10.00\" fill=\"#000000\">A</text>\n</g>\n<!-- A&#45;&#45;B -->\n<g id=\"edge1\" class=\"edge\">\n<title>A&#45;&#45;B</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M126.2854,-144.5708C120.6253,-133.2506 113.2784,-118.5568 107.6343,-107.2687\"/>\n</g>\n<!-- C -->\n<g id=\"node6\" class=\"node\">\n<title>C</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"171\" cy=\"-90\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"171\" y=\"-87.5\" font-family=\"Times,serif\" font-size=\"10.00\" fill=\"#000000\">C</text>\n</g>\n<!-- A&#45;&#45;C -->\n<g id=\"edge2\" class=\"edge\">\n<title>A&#45;&#45;C</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M143.7146,-144.5708C149.3747,-133.2506 156.7216,-118.5568 162.3657,-107.2687\"/>\n</g>\n<!-- F -->\n<g id=\"node5\" class=\"node\">\n<title>F</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"171\" cy=\"-18\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"171\" y=\"-15.5\" font-family=\"Times,serif\" font-size=\"10.00\" fill=\"#000000\">F</text>\n</g>\n<!-- C&#45;&#45;F -->\n<g id=\"edge5\" class=\"edge\">\n<title>C&#45;&#45;F</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M171,-71.8314C171,-61 171,-47.2876 171,-36.4133\"/>\n</g>\n<!-- G -->\n<g id=\"node7\" class=\"node\">\n<title>G</title>\n<ellipse fill=\"none\" stroke=\"#000000\" cx=\"243\" cy=\"-18\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"243\" y=\"-15.5\" font-family=\"Times,serif\" font-size=\"10.00\" fill=\"#000000\">G</text>\n</g>\n<!-- C&#45;&#45;G -->\n<g id=\"edge6\" class=\"edge\">\n<title>C&#45;&#45;G</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M186.2693,-74.7307C198.488,-62.512 215.5398,-45.4602 227.7527,-33.2473\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{},"execution_count":5}]}]}